<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Custom Framing - Artwork Upload</title>
    
    <!-- Bootstrap CSS (optional, for styling) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Our custom styles -->
    <link rel="stylesheet" href="css/artwork-detector-styles.css">
    
    <style>
        /* Additional custom styles for this demo */
        body {
            padding: 20px;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }
        
        .site-header {
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }
        
        .upload-container {
            max-width: 800px;
            margin: 0 auto;
        }
        
        .marker-info {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 30px;
        }
        
        .marker-info img {
            max-width: 200px;
            display: block;
            margin: 15px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="site-header">
            <h1>Custom Framing Service</h1>
            <p class="lead">Upload your artwork and we'll create the perfect frame for it</p>
        </header>
        
        <div class="upload-container">
            <div class="row">
                <div class="col-md-12">
                    <div class="marker-info">
                        <h3>How to Measure Your Artwork</h3>
                        <p>For automatic sizing, please print the reference marker and place it next to your artwork when taking a photo.</p>
                        
                        <button id="download-marker-btn" class="btn btn-primary">Download Reference Marker</button>
                        
                        <img src="images/marker-sample.png" alt="Sample reference marker" id="marker-preview">
                        
                        <ol>
                            <li>Print the marker at exactly 5x5 cm size (do not scale)</li>
                            <li>Place the marker next to your artwork</li>
                            <li>Take a clear photo showing both the artwork and marker</li>
                            <li>Upload the photo below</li>
                        </ol>
                    </div>
                    
                    <!-- Upload Form -->
                    <form id="artwork-upload-form" method="post" action="process_order.php" enctype="multipart/form-data">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h4>Upload Your Artwork</h4>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="artwork-file-input" class="form-label">Choose an image of your artwork</label>
                                    <input class="form-control" type="file" id="artwork-file-input" name="artwork" accept="image/*" required>
                                </div>
                                
                                <div id="artwork-preview" class="mb-4"></div>
                                
                                <div id="artwork-size-info" class="mb-4"></div>
                                
                                <!-- Hidden fields for dimensions -->
                                <input type="hidden" id="artwork-width" name="width">
                                <input type="hidden" id="artwork-height" name="height">
                                <input type="hidden" id="artwork-unit" name="unit" value="cm">
                            </div>
                        </div>
                        
                        <div class="card mb-4">
                            <div class="card-header">
                                <h4>Artwork Details</h4>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="artwork-title" class="form-label">Artwork Title</label>
                                    <input type="text" class="form-control" id="artwork-title" name="title" placeholder="Optional">
                                </div>
                                
                                <div class="mb-3">
                                    <label for="artwork-type" class="form-label">Artwork Type</label>
                                    <select class="form-select" id="artwork-type" name="type">
                                        <option selected value="print">Print</option>
                                        <option value="painting">Painting</option>
                                        <option value="photograph">Photograph</option>
                                        <option value="drawing">Drawing</option>
                                        <option value="poster">Poster</option>
                                        <option value="other">Other</option>
                                    </select>
                                </div>
                                
                                <div class="mb-3">
                                    <label for="special-instructions" class="form-label">Special Instructions</label>
                                    <textarea class="form-control" id="special-instructions" name="instructions" rows="3" placeholder="Optional"></textarea>
                                </div>
                            </div>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg">Continue to Frame Selection</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Required libraries -->
    <!-- OpenCV.js (loaded asynchronously to avoid blocking) -->
    <script>
        function loadOpenCV() {
            return new Promise((resolve, reject) => {
                const script = document.createElement('script');
                script.src = 'https://docs.opencv.org/4.6.0/opencv.js';
                script.async = true;
                script.onload = () => resolve();
                script.onerror = () => reject(new Error('Failed to load OpenCV.js'));
                document.head.appendChild(script);
            });
        }
        
        function loadJsAruco() {
            return new Promise((resolve, reject) => {
                const script = document.createElement('script');
                script.src = 'js/js-aruco2.min.js';
                script.async = true;
                script.onload = () => resolve();
                script.onerror = () => reject(new Error('Failed to load js-aruco2'));
                document.head.appendChild(script);
            });
        }

        // Load our scripts
        document.addEventListener('DOMContentLoaded', async function() {
            // Show loading indicator
            const loadingEl = document.createElement('div');
            loadingEl.className = 'artwork-size-loading';
            loadingEl.innerHTML = '<div class="artwork-size-spinner"></div><span>Loading libraries...</span>';
            loadingEl.style.display = 'flex';
            loadingEl.style.position = 'fixed';
            loadingEl.style.top = '0';
            loadingEl.style.left = '0';
            loadingEl.style.right = '0';
            loadingEl.style.bottom = '0';
            loadingEl.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';
            loadingEl.style.zIndex = '9999';
            loadingEl.style.justifyContent = 'center';
            loadingEl.style.alignItems = 'center';
            document.body.appendChild(loadingEl);
            
            try {
                // Load required libraries
                await Promise.all([
                    loadOpenCV(),
                    loadJsAruco()
                ]);
                
                // Load our scripts
                await Promise.all([
                    new Promise((resolve) => {
                        const script = document.createElement('script');
                        script.src = 'js/artwork-size-detector.js';
                        script.onload = resolve;
                        document.head.appendChild(script);
                    }),
                    new Promise((resolve) => {
                        const script = document.createElement('script');
                        script.src = 'js/artwork-detector-integration.js';
                        script.onload = resolve;
                        document.head.appendChild(script);
                    })
                ]);
                
                // Initialize the integration
                const sizeIntegration = new ArtworkSizeIntegration({
                    // Core selectors
                    selectorUploadForm: '#artwork-upload-form',
                    selectorImagePreview: '#artwork-preview',
                    selectorImageInput: '#artwork-file-input',
                    selectorSizeInfoContainer: '#artwork-size-info',
                    
                    // Fields
                    selectorWidthField: '#artwork-width',
                    selectorHeightField: '#artwork-height',
                    selectorUnitField: '#artwork-unit',
                    
                    // Options
                    markerSizeCm: 5, // Size of the reference marker in cm
                    enableAutoDetect: true,
                    allowManualOverride: true,
                    
                    // Callbacks
                    onSizeDetected: function(dimensions) {
                        console.log('Detected dimensions:', dimensions);
                        // You can trigger custom events or modify DOM here
                    },
                    onSizeUpdated: function(dimensions) {
                        console.log('Dimensions updated:', dimensions);
                        // Update pricing or other elements if needed
                    },
                    onError: function(message) {
                        console.error('Error:', message);
                        // Handle errors (perhaps show a notification)
                    }
                });
                
                await sizeIntegration.init();
                
                // Set up marker download button
                const downloadBtn = document.getElementById('download-marker-btn');
                if (downloadBtn) {
                    downloadBtn.addEventListener('click', function() {
                        sizeIntegration.downloadMarker(0, 500); // ID 0, 500px size
                    });
                }
                
                // Generate a preview for the marker
                const markerPreview = document.getElementById('marker-preview');
                if (markerPreview) {
                    const markerDataURL = await sizeIntegration.generateMarkerDataURL(0, 200);
                    markerPreview.src = markerDataURL;
                }
            } catch (error) {
                console.error('Initialization error:', error);
                const errorEl = document.createElement('div');
                errorEl.className = 'alert alert-danger';
                errorEl.textContent = 'Failed to initialize: ' + error.message;
                document.querySelector('.upload-container').prepend(errorEl);
            } finally {
                // Hide loading indicator
                loadingEl.style.display = 'none';
                setTimeout(() => loadingEl.remove(), 500);
            }
        });