<?php
/**
 * Frame Selection Page
 * 
 * This page allows customers to select a frame style and options
 * based on the detected artwork dimensions.
 */

// Start session if not already started
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

// Check if order ID is provided
$orderId = isset($_GET['order_id']) ? $_GET['order_id'] : null;

if (!$orderId && !isset($_SESSION['order_id'])) {
    // Redirect to upload page if no order ID
    header('Location: upload.php');
    exit;
}

// Use order ID from session if not provided in URL
if (!$orderId && isset($_SESSION['order_id'])) {
    $orderId = $_SESSION['order_id'];
}

// Get artwork dimensions from session
$artworkDimensions = isset($_SESSION['artwork_dimensions']) ? $_SESSION['artwork_dimensions'] : null;

// If dimensions are not in session, retrieve from database
if (!$artworkDimensions) {
    // Create database connection
    $db = new mysqli('localhost', 'username', 'password', 'framing_database');
    
    // Check connection
    if ($db->connect_error) {
        die('Database connection failed: ' . $db->connect_error);
    }
    
    // Get order details
    $stmt = $db->prepare("SELECT width_cm, height_cm FROM orders WHERE order_id = ?");
    $stmt->bind_param('s', $orderId);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 1) {
        $order = $result->fetch_assoc();
        $artworkDimensions = [
            'width' => $order['width_cm'],
            'height' => $order['height_cm'],
            'unit' => 'cm'
        ];
        
        // Store in session for later use
        $_SESSION['artwork_dimensions'] = $artworkDimensions;
    } else {
        // Order not found
        $_SESSION['error'] = 'Order not found.';
        header('Location: upload.php');
        exit;
    }
    
    // Close database connection
    $stmt->close();
    $db->close();
}

// Function to format dimensions
function formatDimensions($width, $height, $unit) {
    return number_format($width, 2) . ' ' . $unit . ' Ã— ' . number_format($height, 2) . ' ' . $unit;
}

// Function to calculate frame price (sample implementation)
function calculateFramePrice($frameStyle, $width, $height, $unit) {
    // Convert to inches if in cm
    if ($unit === 'cm') {
        $width = $width / 2.54;
        $height = $height / 2.54;
    }
    
    // Calculate perimeter in inches
    $perimeter = ($width + $height) * 2;
    
    // Base prices per inch for different frame styles
    $pricePerInch = [
        'standard' => 2.50,
        'premium' => 3.75,
        'luxury' => 5.00,
        'ornate' => 6.50,
        'minimal' => 2.25
    ];
    
    // Get price per inch for selected style (default to standard)
    $rate = isset($pricePerInch[$frameStyle]) ? $pricePerInch[$frameStyle] : $pricePerInch['standard'];
    
    // Calculate base price
    $basePrice = $perimeter * $rate;
    
    // Round to nearest dollar
    return ceil($basePrice);
}

// Sample frame styles (in a real implementation, these would come from a database)
$frameStyles = [
    [
        'id' => 'standard',
        'name' => 'Standard Wood Frame',
        'description' => 'Classic wood frame with a timeless design.',
        'image' => 'images/frames/standard.jpg',
        'colors' => ['black', 'white', 'walnut', 'cherry'],
        'price' => calculateFramePrice('standard', $artworkDimensions['width'], $artworkDimensions['height'], $artworkDimensions['unit'])
    ],
    [
        'id' => 'premium',
        'name' => 'Premium Wood Frame',
        'description' => 'High-quality wood frame with elegant finishing.',
        'image' => 'images/frames/premium.jpg',
        'colors' => ['black', 'white', 'natural', 'espresso', 'gold'],
        'price' => calculateFramePrice('premium', $artworkDimensions['width'], $artworkDimensions['height'], $artworkDimensions['unit'])
    ],
    [
        'id' => 'luxury',
        'name' => 'Luxury Gold Frame',
        'description' => 'Ornate gold-finished frame for a luxurious presentation.',
        'image' => 'images/frames/luxury.jpg',
        'colors' => ['gold', 'silver', 'bronze'],
        'price' => calculateFramePrice('luxury', $artworkDimensions['width'], $artworkDimensions['height'], $artworkDimensions['unit'])
    ],
    [
        'id' => 'ornate',
        'name' => 'Ornate Decorative Frame',
        'description' => 'Intricate decorative frame for a statement piece.',
        'image' => 'images/frames/ornate.jpg',
        'colors' => ['antique gold', 'vintage silver', 'bronze patina'],
        'price' => calculateFramePrice('ornate', $artworkDimensions['width'], $artworkDimensions['height'], $artworkDimensions['unit'])
    ],
    [
        'id' => 'minimal',
        'name' => 'Minimalist Metal Frame',
        'description' => 'Clean, modern metal frame for a contemporary look.',
        'image' => 'images/frames/minimal.jpg',
        'colors' => ['black', 'white', 'silver', 'brushed gold'],
        'price' => calculateFramePrice('minimal', $artworkDimensions['width'], $artworkDimensions['height'], $artworkDimensions['unit'])
    ]
];

// Sample mat options
$matOptions = [
    [
        'id' => 'none',
        'name' => 'No Mat',
        'price' => 0
    ],
    [
        'id' => 'single',
        'name' => 'Single Mat',
        'price' => 20
    ],
    [
        'id' => 'double',
        'name' => 'Double Mat',
        'price' => 35
    ]
];

// Sample glass options
$glassOptions = [
    [
        'id' => 'standard',
        'name' => 'Standard Glass',
        'description' => 'Clear glass with UV protection.',
        'price' => 0
    ],
    [
        'id' => 'non-glare',
        'name' => 'Non-Glare Glass',
        'description' => 'Reduces reflections for better viewing.',
        'price' => 25
    ],
    [
        'id' => 'museum',
        'name' => 'Museum Glass',
        'description' => 'Premium glass with 99% UV protection and anti-reflection.',
        'price' => 60
    ]
];

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['frame_style'])) {
    // Get selected options
    $selectedFrame = $_POST['frame_style'];
    $selectedColor = isset($_POST['frame_color']) ? $_POST['frame_color'] : '';
    $selectedMat = isset($_POST['mat_option']) ? $_POST['mat_option'] : 'none';
    $selectedGlass = isset($_POST['glass_option']) ? $_POST['glass_option'] : 'standard';
    
    // Store selections in session
    $_SESSION['frame_selections'] = [
        'frame_style' => $selectedFrame,
        'frame_color' => $selectedColor,
        'mat_option' => $selectedMat,
        'glass_option' => $selectedGlass
    ];
    
    // Update order in database
    // (In a real implementation, you would update the order with these selections)
    
    // Redirect to checkout or next step
    header('Location: checkout.php?order_id=' . $orderId);
    exit;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Select Frame - Custom Framing</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Custom CSS -->
    <link rel="stylesheet" href="css/styles.css">
    
    <style>
        .frame-option {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            transition: all 0.3s ease;
        }
        
        .frame-option:hover {
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .frame-option.selected {
            border-color: #007bff;
            box-shadow: 0 5px 15px rgba(0,123,255,0.2);
        }
        
        .frame-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 4px;
            margin-bottom: 10px;
        }
        
        .artwork-preview {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 30px;
        }
        
        .color-swatch {
            display: inline-block;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            margin-right: 5px;
            border: 2px solid #ddd;
            cursor: pointer;
        }
        
        .color-swatch.selected {
            border-color: #007bff;
        }
    </style>
</head>
<body>
    <div class="container my-5">
        <div class="row">
            <div class="col-12">
                <h1>Select Your Frame</h1>
                <p>Choose the perfect frame for your artwork.</p>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-4">
                <div class="artwork-preview">
                    <h3>Your Artwork</h3>
                    <p>Dimensions: <?php echo formatDimensions($artworkDimensions['width'], $artworkDimensions['height'], $artworkDimensions['unit']); ?></p>
                    
                    <?php if (isset($_SESSION['order_id'])): ?>
                        <?php 
                        // Get artwork image path from database
                        $imagePath = 'uploads/sample-artwork.jpg'; // Placeholder
                        
                        // In a real implementation, you would fetch this from the database
                        // $imagePath = getArtworkImagePath($orderId);
                        ?>
                        
                        <div class="artwork-image-container">
                            <img src="<?php echo $imagePath; ?>" alt="Your Artwork" class="img-fluid">
                        </div>
                    <?php endif; ?>
                </div>
            </div>
            
            <div class="col-md-8">
                <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']) . '?order_id=' . $orderId; ?>">
                    <div class="mb-4">
                        <h3>Frame Styles</h3>
                        <div class="row">
                            <?php foreach ($frameStyles as $frame): ?>
                                <div class="col-md-6">
                                    <div class="frame-option" data-frame-id="<?php echo $frame['id']; ?>">
                                        <img src="<?php echo $frame['image']; ?>" alt="<?php echo $frame['name']; ?>" class="frame-image">
                                        <h4><?php echo $frame['name']; ?></h4>
                                        <p class="text-muted"><?php echo $frame['description']; ?></p>
                                        <p class="fw-bold">$<?php echo number_format($frame['price'], 2); ?></p>
                                        
                                        <div class="form-check">
                                            <input class="form-check-input frame-selection" type="radio" name="frame_style" id="frame_<?php echo $frame['id']; ?>" value="<?php echo $frame['id']; ?>" required>
                                            <label class="form-check-label" for="frame_<?php echo $frame['id']; ?>">
                                                Select this frame
                                            </label>
                                        </div>
                                        
                                        <div class="mt-2 frame-colors" style="display: none;">
                                            <p>Color options:</p>
                                            <?php foreach ($frame['colors'] as $color): ?>
                                                <div class="color-swatch" style="background-color: <?php echo $color; ?>;" data-color="<?php echo $color; ?>" title="<?php echo ucfirst($color); ?>"></div>
                                            <?php endforeach; ?>
                                            <input type="hidden" name="frame_color" class="selected-color-input">
                                        </div>
                                    </div>
                                </div>
                            <?php endforeach; ?>
                        </div>
                    </div>
                    
                    <div class="mb-4">
                        <h3>Mat Options</h3>
                        <div class="row">
                            <?php foreach ($matOptions as $mat): ?>
                                <div class="col-md-4">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="mat_option" id="mat_<?php echo $mat['id']; ?>" value="<?php echo $mat['id']; ?>" <?php echo $mat['id'] === 'none' ? 'checked' : ''; ?>>
                                                <label class="form-check-label" for="mat_<?php echo $mat['id']; ?>">
                                                    <?php echo $mat['name']; ?>
                                                    <?php if ($mat['price'] > 0): ?>
                                                        <span class="text-muted">(+$<?php echo number_format($mat['price'], 2); ?>)</span>
                                                    <?php endif; ?>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            <?php endforeach; ?>
                        </div>
                    </div>
                    
                    <div class="mb-4">
                        <h3>Glass Options</h3>
                        <div class="row">
                            <?php foreach ($glassOptions as $glass): ?>
                                <div class="col-md-4">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="glass_option" id="glass_<?php echo $glass['id']; ?>" value="<?php echo $glass['id']; ?>" <?php echo $glass['id'] === 'standard' ? 'checked' : ''; ?>>
                                                <label class="form-check-label" for="glass_<?php echo $glass['id']; ?>">
                                                    <?php echo $glass['name']; ?>
                                                    <?php if ($glass['price'] > 0): ?>
                                                        <span class="text-muted">(+$<?php echo number_format($glass['price'], 2); ?>)</span>
                                                    <?php endif; ?>
                                                </label>
                                            </div>
                                            <small class="text-muted"><?php echo $glass['description']; ?></small>
                                        </div>
                                    </div>
                                </div>
                            <?php endforeach; ?>
                        </div>
                    </div>
                    
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary btn-lg">Continue to Checkout</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Frame selection script -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Frame selection
            const frameOptions = document.querySelectorAll('.frame-option');
            const frameSelectionInputs = document.querySelectorAll('.frame-selection');
            
            frameSelectionInputs.forEach(input => {
                input.addEventListener('change', function() {
                    // Hide all color options
                    document.querySelectorAll('.frame-colors').forEach(el => {
                        el.style.display = 'none';
                    });
                    
                    // Remove selected class from all frames
                    frameOptions.forEach(option => {
                        option.classList.remove('selected');
                    });
                    
                    // Add selected class to current frame and show color options
                    if (this.checked) {
                        const frameOption = this.closest('.frame-option');
                        frameOption.classList.add('selected');
                        
                        const colorOptions = frameOption.querySelector('.frame-colors');
                        if (colorOptions) {
                            colorOptions.style.display = 'block';
                            
                            // Select first color by default
                            const firstColor = colorOptions.querySelector('.color-swatch');
                            if (firstColor) {
                                firstColor.click();
                            }
                        }
                    }
                });
            });
            
            // Color selection
            const colorSwatches = document.querySelectorAll('.color-swatch');
            
            colorSwatches.forEach(swatch => {
                swatch.addEventListener('click', function() {
                    // Remove selected class from all swatches in this frame
                    const frameOption = this.closest('.frame-option');
                    frameOption.querySelectorAll('.color-swatch').forEach(el => {
                        el.classList.remove('selected');
                    });
                    
                    // Add selected class to current swatch
                    this.classList.add('selected');
                    
                    // Update hidden input with selected color
                    const colorInput = frameOption.querySelector('.selected-color-input');
                    colorInput.value = this.getAttribute('data-color');
                });
            });
        });
    </script>
</body>
</html>