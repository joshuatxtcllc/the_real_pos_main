# Custom Virtual Framer with AI

![Version](https://img.shields.io/badge/version-1.0.0-blue.svg)
![License](https://img.shields.io/badge/license-MIT-green.svg)

A custom virtual art framing tool inspired by "Virtual Framer" with enhanced AI features, including an order status chatbot integrated with Google Sheets.

## 🖼️ Features

- **Interactive Frame Visualization**
  - Upload and preview artwork with various frame styles
  - Customizable matting with color selection
  - Real-time pricing updates

- **AI-Enhanced Experience**
  - Smart frame recommendations based on artwork analysis
  - Color palette matching for optimal mat selection
  - Order status chatbot for customer service

- **Google Sheets Integration**
  - Order tracking and management through Google Sheets
  - Real-time status updates
  - Inventory management

## 🚀 Tech Stack

- **Frontend**: React.js, Three.js for 3D visualization
- **Backend**: Node.js with Express
- **AI Components**: TensorFlow.js, Natural Language Processing
- **Database**: Google Sheets API
- **Development**: Replit
- **Deployment**: Netlify
- **Source Control**: GitHub

## 📋 Project Structure

```
custom-virtual-framer/
├── client/                  # React frontend
│   ├── public/              # Static files
│   └── src/                 # Source files
│       ├── components/      # UI components
│       ├── services/        # API services
│       └── utils/           # Utility functions
├── server/                  # Node.js backend
│   ├── api/                 # API routes
│   ├── services/            # Business logic
│   └── utils/               # Helper functions
└── ai/                      # AI modules
    ├── chatbot/             # Order status chatbot
    └── image-analysis/      # Artwork analysis
```

## 🛠️ Setup and Development

### Prerequisites

- Node.js (v14 or later)
- npm or yarn
- Google Cloud account (for Sheets API)
- GitHub account
- Replit account
- Netlify account

### Local Development

1. Clone the repository:
   ```bash
   git clone https://github.com/your-username/custom-virtual-framer.git
   cd custom-virtual-framer
   ```

2. Install dependencies:
   ```bash
   # Install frontend dependencies
   cd client
   npm install
   
   # Install backend dependencies
   cd ../server
   npm install
   ```

3. Set up environment variables:
   Create `.env` files in both client and server directories with the necessary configuration.

4. Start the development servers:
   ```bash
   # Start backend server
   cd server
   npm run dev
   
   # In a separate terminal, start frontend
   cd client
   npm start
   ```

### Replit Development

1. Create a new Repl using the GitHub repository
2. Configure environment variables in Replit
3. Run the development server

### Deployment on Netlify

1. Connect your GitHub repository to Netlify
2. Configure build settings:
   - Build command: `cd client && npm run build`
   - Publish directory: `client/build`
3. Set up environment variables in Netlify dashboard
4. Deploy your application

## 🔄 Google Sheets Integration

### Setting Up Google Sheets

1. Create a new Google Sheet for order tracking
2. Structure the sheet with the following columns:
   - Order ID
   - Customer Name
   - Customer Email
   - Order Date
   - Artwork Details
   - Frame Details
   - Mat Details
   - Order Status
   - Shipping Information
   - Last Updated

### API Integration

1. Create a Google Cloud project
2. Enable Google Sheets API
3. Generate API credentials (service account key)
4. Share your Google Sheet with the service account email

## 🤖 Chatbot Setup

The order status chatbot uses natural language processing to understand customer queries and fetches real-time information from Google Sheets.

### Training the Chatbot

1. Prepare training data with common order status questions
2. Train the model using the provided scripts
3. Test the chatbot with sample queries

## 📚 Documentation

- [API Documentation](docs/api.md)
- [Frontend Components](docs/components.md)
- [Google Sheets Integration](docs/sheets-integration.md)
- [Chatbot Implementation](docs/chatbot.md)

## 🤝 Contributing

1. Fork the repository
2. Create a feature branch: `git checkout -b feature/your-feature-name`
3. Commit your changes: `git commit -m 'Add some feature'`
4. Push to the branch: `git push origin feature/your-feature-name`
5. Open a pull request

## 📄 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.