import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

// Components
import Header from './components/Header/Header';
import Footer from './components/Footer/Footer';
import Dashboard from './components/Dashboard/Dashboard';
import QRGenerator from './components/QRGenerator/QRGenerator';
import OrderTracker from './components/OrderTracker/OrderTracker';
import OrderDetails from './components/OrderTracker/OrderDetails';
import MaterialScanner from './components/MaterialScanner/MaterialScanner';

// Context
import { AppProvider } from './contexts/AppContext';
import { ThemeProvider } from './contexts/ThemeContext';
import { OrderProvider } from './contexts/OrderContext';

// Styles
import './assets/styles/main.css';

function App() {
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    // Simulate loading data (in a real app, we would load data from an API or local storage)
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 1000);

    return () => clearTimeout(timer);
  }, []);

  return (
    <ThemeProvider>
      <AppProvider>
        <OrderProvider>
          <Router>
            <div className="app">
              <Header />
              
              <main className="main-content">
                {isLoading ? (
                  <div className="loading-container">
                    <div className="spinner"></div>
                    <p>Loading Frame Guru QR System...</p>
                  </div>
                ) : (
                  <Routes>
                    <Route path="/" element={<Dashboard />} />
                    <Route path="/generate" element={<QRGenerator />} />
                    <Route path="/orders" element={<OrderTracker />} />
                    <Route path="/orders/:id" element={<OrderDetails />} />
                    <Route path="/materials" element={<MaterialScanner />} />
                  </Routes>
                )}
              </main>
              
              <Footer />
              
              <ToastContainer
                position="bottom-right"
                autoClose={3000}
                hideProgressBar={false}
                newestOnTop
                closeOnClick
                rtl={false}
                pauseOnFocusLoss
                draggable
                pauseOnHover
              />
            </div>
          </Router>
        </OrderProvider>
      </AppProvider>
    </ThemeProvider>
  );
}

export default App;